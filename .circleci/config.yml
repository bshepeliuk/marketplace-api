version: 2.1

executors:
  server_api:
    working_directory: ~/app
    docker:
      - image: cimg/node:18.2.0
        environment:
          NODE_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: bshepeliuk
      - image: cimg/postgres:14.0
        environment:
          POSTGRES_USER: bshepeliuk
          POSTGRES_DB: test-db
          POSTGRES_PASSWORD: bshepeliuk
      - image: cimg/redis:6.2.6

commands:
  install_dependencies:
    description: 'Install dependencies'
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
  waiting_for_db:
    description: 'Waiting for PostgreSQL && Redis'
    steps:
      - run:
          name: Waiting for PostgreSQL
          working_directory: ~/app
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Waiting for Redis
          working_directory: ~/app
          command: dockerize -wait tcp://localhost:6379 -timeout 1m
  run_migration:
    description: 'Running Migrations'
    steps:
      - run:
          name: Upgrade Database
          working_directory: ~/app
          command: npm run migrate
  run_tests:
    description: Running tests
    steps:
      - run:
          name: Run tests
          working_directory: ~/app
          command: npm test
  run_deploy_to_railway:
    description: Install Railway CLI and deploy app.
    steps:
      - run:
          name: Install Railway CLI
          command: npm install -g @railway/cli
      - run:
          name: Deploy app.
          command: RAILWAY_TOKEN=$RAILWAY_TOKEN railway up

jobs:
  build:
    working_directory: ~/app
    executor: server_api
    steps:
      - install_dependencies
  test:
    working_directory: ~/app
    executor: server_api
    steps:
      - install_dependencies
      - waiting_for_db
      - run_migration
      - run_tests
  deploy:
    working_directory: ~/app
    executor: server_api
    steps:
      - checkout
      - setup_remote_docker
      - run_deploy_to_railway

workflows:
  version: 2.1
  build_deploy:
    jobs:
      - build
      - test
      # - deploy:
      #     requires:
      #       - test
      #     filters:
      #       branches:
      #         only: main # Only deploy when the commit is on the Main branch
